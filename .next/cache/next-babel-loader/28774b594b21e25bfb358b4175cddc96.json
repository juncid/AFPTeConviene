{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Field } from \"formik\";\nimport { Wizard, WizardStep } from \"./WizardComponent\";\nimport { Step1Schema, Step2Schema } from \"../utils/validationSchemaWizard\";\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport MaskedInput from \"react-text-mask\";\nimport { celularMask, dineroMask, rutMask } from \"../utils/inputMask\";\nimport { cleanDigitos, cleanRut } from \"../utils/cleanInputMask\";\n\nvar APVForm = function APVForm(props) {\n  _s();\n\n  var aacento = \"\\xE1\";\n  var eacento = \"\\xE9\";\n  var iacento = \"\\xED\";\n  var oacento = \"\\xF3\";\n  var uacento = \"\\xFA\";\n  var enhe = \"\\xF1\";\n  var interrogacion = \"\\xBF\";\n  var router = useRouter();\n  var initialValues = {\n    nombre: '',\n    rut: '',\n    correo: '',\n    celular: '',\n    sueldo: '',\n    ahorro: '',\n    afp: '',\n    terminosycondiciones: false\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"wizardForm\",\n    children: /*#__PURE__*/_jsxs(Wizard, {\n      initialValues: initialValues,\n      onSubmit: function onSubmit(values) {\n        console.log(values);\n        /*\r\n        const headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${props.token}`\r\n        };\r\n          const url = `${props.urlPostSimulacion}`;\r\n          const body = {\r\n            nombre: values.nombre,\r\n            rut: cleanRut(values.rut),\r\n            correo: values.correo,\r\n            celular: cleanDigitos(values.celular),\r\n            sueldo: cleanDigitos(values.sueldo),\r\n            ahorro: cleanDigitos(values.ahorro)\r\n        };\r\n          axios\r\n            .post(url, body, { headers: headers })\r\n            .then((response) => {\r\n                let data = response.data;\r\n                    if (data.idSimulacion) {\r\n                    router.push({\r\n                        pathname: \"/resultado\",\r\n                        query: {\r\n                            id: data.idSimulacion,\r\n                        },\r\n                    });\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n          */\n      },\n      children: [/*#__PURE__*/_jsxs(WizardStep, {\n        onSubmit: function onSubmit() {\n          return console.log('Step1 onSubmit');\n        },\n        validationSchema: Step1Schema,\n        children: [/*#__PURE__*/_jsx(Field, {\n          name: \"nombre\",\n          children: function children(_ref) {\n            var field = _ref.field,\n                meta = _ref.meta;\n            return /*#__PURE__*/_jsxs(\"div\", {\n              className: \"form-group input-wrapper\",\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                htmlFor: \"nombre\",\n                className: \"control-label\",\n                children: \"Nombre\"\n              }), /*#__PURE__*/_jsx(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n                type: \"text\",\n                className: \"form-control form-control-lg \\n                                        \".concat(meta.touched ? meta.error ? \"is-invalid\" : \"is-valid\" : \"\"),\n                id: \"nombre\",\n                \"aria-describedby\": \"nombreAyuda\",\n                placeholder: \"Nombre\"\n              })), /*#__PURE__*/_jsx(\"small\", {\n                id: \"nombreAyuda\",\n                className: \"form-text \".concat(meta.touched && meta.error ? \"is-invalid\" : \"\"),\n                children: meta.touched && meta.error ? meta.error : \"Indicanos tu nombre y apellido.\"\n              })]\n            });\n          }\n        }), /*#__PURE__*/_jsx(Field, {\n          name: \"rut\",\n          children: function children(_ref2) {\n            var field = _ref2.field,\n                meta = _ref2.meta;\n            return /*#__PURE__*/_jsxs(\"div\", {\n              className: \"form-group input-wrapper\",\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                htmlFor: \"rut\",\n                className: \"control-label\",\n                children: \"RUT\"\n              }), /*#__PURE__*/_jsx(MaskedInput, _objectSpread(_objectSpread({}, field), {}, {\n                type: \"text\",\n                mask: rutMask,\n                className: \"form-control form-control-lg \\n                                    \".concat(meta.touched ? meta.error ? \"is-invalid\" : \"is-valid\" : \"\"),\n                id: \"rut\",\n                \"aria-describedby\": \"rutAyuda\",\n                placeholder: \"RUT\"\n              })), /*#__PURE__*/_jsx(\"small\", {\n                id: \"rutAyuda\",\n                className: \"form-text \".concat(meta.touched && meta.error ? \"is-invalid\" : \"\"),\n                children: meta.touched && meta.error ? meta.error : \"Ej. 12.345.678-9.\"\n              })]\n            });\n          }\n        }), /*#__PURE__*/_jsx(Field, {\n          name: \"correo\",\n          children: function children(_ref3) {\n            var field = _ref3.field,\n                meta = _ref3.meta;\n            return /*#__PURE__*/_jsxs(\"div\", {\n              className: \"form-group input-wrapper\",\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                htmlFor: \"correo\",\n                className: \"control-label\",\n                children: \"Correo\"\n              }), /*#__PURE__*/_jsx(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n                type: \"email\",\n                className: \"form-control form-control-lg \\n                                        \".concat(meta.touched ? meta.error ? \"is-invalid\" : \"is-valid\" : \"\"),\n                id: \"correo\",\n                \"aria-describedby\": \"correoAyuda\",\n                placeholder: \"Correo\"\n              })), /*#__PURE__*/_jsx(\"small\", {\n                id: \"correoAyuda\",\n                className: \"form-text \".concat(meta.touched && meta.error ? \"is-invalid\" : \"\"),\n                children: meta.touched && meta.error ? meta.error : \"Ej. aumentatusueldo@afpmodelo.cl\"\n              })]\n            });\n          }\n        }), /*#__PURE__*/_jsx(Field, {\n          name: \"celular\",\n          children: function children(_ref4) {\n            var field = _ref4.field,\n                meta = _ref4.meta;\n            return /*#__PURE__*/_jsxs(\"div\", {\n              className: \"form-group input-wrapper\",\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                htmlFor: \"celular\",\n                className: \"control-label\",\n                children: \"Celular\"\n              }), /*#__PURE__*/_jsx(MaskedInput, _objectSpread(_objectSpread({}, field), {}, {\n                type: \"text\",\n                mask: celularMask,\n                className: \"form-control form-control-lg \\n                                    \".concat(meta.touched ? meta.error ? \"is-invalid\" : \"is-valid\" : \"\"),\n                id: \"celular\",\n                \"aria-describedby\": \"celularAyuda\",\n                placeholder: \"9 ____ ____\"\n              })), /*#__PURE__*/_jsx(\"small\", {\n                id: \"celularAyuda\",\n                className: \"form-text \".concat(meta.touched && meta.error ? \"is-invalid\" : \"\"),\n                children: meta.touched && meta.error ? meta.error : \"Ej. 9 1112 23XX\"\n              })]\n            });\n          }\n        })]\n      }), /*#__PURE__*/_jsxs(WizardStep, {\n        onSubmit: function onSubmit() {\n          return console.log('Step2 onSubmit');\n        },\n        validationSchema: Step2Schema,\n        children: [/*#__PURE__*/_jsx(Field, {\n          name: \"sueldo\",\n          children: function children(_ref5) {\n            var field = _ref5.field,\n                meta = _ref5.meta;\n            return /*#__PURE__*/_jsxs(\"div\", {\n              className: \"form-group input-wrapper\",\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                htmlFor: \"sueldo\",\n                className: \"control-label\",\n                children: \"sueldo\"\n              }), /*#__PURE__*/_jsx(MaskedInput, _objectSpread(_objectSpread({}, field), {}, {\n                type: \"text\",\n                mask: dineroMask,\n                className: \"form-control form-control-lg \\n                                    \".concat(meta.touched ? meta.error ? \"is-invalid\" : \"is-valid\" : \"\"),\n                id: \"sueldo\",\n                \"aria-describedby\": \"sueldoAyuda\",\n                placeholder: \"Sueldo L\".concat(iacento, \"quido\")\n              })), /*#__PURE__*/_jsx(\"small\", {\n                id: \"sueldoAyuda\",\n                className: \"form-text \".concat(meta.touched && meta.error ? \"is-invalid\" : \"\"),\n                children: meta.touched && meta.error ? meta.error : \"El sueldo l\".concat(iacento, \"quido que recibes luego de los descuentos legales.\")\n              })]\n            });\n          }\n        }), /*#__PURE__*/_jsx(Field, {\n          name: \"ahorro\",\n          children: function children(_ref6) {\n            var field = _ref6.field,\n                meta = _ref6.meta;\n            return /*#__PURE__*/_jsxs(\"div\", {\n              className: \"form-group input-wrapper\",\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                htmlFor: \"ahorro\",\n                className: \"control-label\",\n                children: \"Monto Ahorro\"\n              }), /*#__PURE__*/_jsx(MaskedInput, _objectSpread(_objectSpread({}, field), {}, {\n                type: \"text\",\n                mask: dineroMask,\n                className: \"form-control form-control-lg \\n                                    \".concat(meta.touched ? meta.error ? \"is-invalid\" : \"is-valid\" : \"\"),\n                id: \"ahorro\",\n                \"aria-describedby\": \"ahorroAyuda\",\n                placeholder: \"Ahorro Mensual\"\n              })), /*#__PURE__*/_jsx(\"small\", {\n                id: \"ahorroAyuda\",\n                className: \"form-text \".concat(meta.touched && meta.error ? \"is-invalid\" : \"\"),\n                children: meta.touched && meta.error ? meta.error : \"El monto en pesos que invertir\".concat(iacento, \"as en tu APV.\")\n              })]\n            });\n          }\n        }), /*#__PURE__*/_jsx(Field, {\n          name: \"afp\",\n          children: function children(_ref7) {\n            var field = _ref7.field,\n                meta = _ref7.meta;\n            return /*#__PURE__*/_jsxs(\"div\", {\n              className: \"form-group input-wrapper select\",\n              children: [/*#__PURE__*/_jsxs(\"label\", {\n                htmlFor: \"afp\",\n                children: [\"Ind\", iacento, \"canos tu AFP actual:\"]\n              }), /*#__PURE__*/_jsxs(\"select\", _objectSpread(_objectSpread({}, field), {}, {\n                className: \"form-control form-control-lg\",\n                id: \"afp\",\n                name: \"afp\",\n                children: [\" \", /*#__PURE__*/_jsx(\"option\", {\n                  value: \"default\",\n                  children: \"Seleccione una AFP\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"0\",\n                  children: \"AFP Capital\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"1\",\n                  children: \"AFP Cuprum\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"2\",\n                  children: \"AFP Habitat\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"3\",\n                  children: \"AFP Plan Vital\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"4\",\n                  children: \"AFP Provida\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"6\",\n                  children: \"AFP Uno\"\n                })]\n              })), /*#__PURE__*/_jsx(\"small\", {\n                id: \"ahorroAyuda\",\n                className: \"form-text \".concat(meta.touched && meta.error ? \"is-invalid\" : \"\"),\n                children: meta.touched && meta.error\n              })]\n            });\n          }\n        }), /*#__PURE__*/_jsx(Field, {\n          name: \"multifondo\",\n          children: function children(_ref8) {\n            var field = _ref8.field,\n                meta = _ref8.meta;\n            return /*#__PURE__*/_jsxs(\"div\", {\n              className: \"form-group input-wrapper select\",\n              children: [/*#__PURE__*/_jsxs(\"label\", {\n                htmlFor: \"multifondo\",\n                children: [\"Ind\", iacento, \"canos tu Multifondo actual:\"]\n              }), /*#__PURE__*/_jsxs(\"select\", _objectSpread(_objectSpread({}, field), {}, {\n                className: \"form-control form-control-lg\",\n                id: \"multifondo\",\n                name: \"multifondo\",\n                children: [\" \", /*#__PURE__*/_jsx(\"option\", {\n                  value: \"default\",\n                  children: \"Seleccione un Multi Fondo\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"0\",\n                  children: \"A\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"1\",\n                  children: \"B\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"2\",\n                  children: \"C\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"3\",\n                  children: \"D\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"4\",\n                  children: \"E\"\n                })]\n              })), /*#__PURE__*/_jsx(\"small\", {\n                id: \"multifondoAyuda\",\n                className: \"form-text \\n                                        \".concat(meta.touched && meta.error ? \"is-invalid\" : \"\"),\n                children: meta.touched && meta.error\n              })]\n            });\n          }\n        })]\n      })]\n    })\n  });\n};\n\n_s(APVForm, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = APVForm;\nexport default APVForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"APVForm\");","map":{"version":3,"sources":["C:/Users/MSI/Documents/GitHub/AFPTeConviene/components/ApvForm.js"],"names":["React","useState","useEffect","Field","Wizard","WizardStep","Step1Schema","Step2Schema","useRouter","axios","MaskedInput","celularMask","dineroMask","rutMask","cleanDigitos","cleanRut","APVForm","props","aacento","eacento","iacento","oacento","uacento","enhe","interrogacion","router","initialValues","nombre","rut","correo","celular","sueldo","ahorro","afp","terminosycondiciones","values","console","log","field","meta","touched","error"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Field} from \"formik\";\r\nimport { Wizard, WizardStep } from \"./WizardComponent\";\r\nimport { Step1Schema, Step2Schema} from \"../utils/validationSchemaWizard\";\r\nimport { useRouter } from 'next/router';\r\nimport axios from 'axios';\r\nimport MaskedInput from \"react-text-mask\";\r\nimport { celularMask, dineroMask, rutMask } from \"../utils/inputMask\"\r\nimport { cleanDigitos, cleanRut } from \"../utils/cleanInputMask\"\r\n\r\nconst APVForm = (props) => {\r\n\r\n    const aacento = \"\\u00e1\";\r\n    const eacento = \"\\u00e9\";\r\n    const iacento = \"\\u00ed\";\r\n    const oacento = \"\\u00f3\";\r\n    const uacento = \"\\u00fa\";\r\n    const enhe = '\\u00f1';\r\n    const interrogacion = '\\u00BF';\r\n\r\n    const router = useRouter()\r\n\r\n    const initialValues = {\r\n        nombre: '',\r\n        rut: '',\r\n        correo: '',\r\n        celular: '',\r\n        sueldo: '',\r\n        ahorro: '',\r\n        afp:'',\r\n        terminosycondiciones: false,\r\n    };\r\n\r\n    return (\r\n        <div className='wizardForm'>\r\n            <Wizard\r\n                initialValues={initialValues}\r\n                onSubmit={values => {\r\n                    console.log(values);\r\n                    /*\r\n                    const headers = {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": `Bearer ${props.token}`\r\n                    };\r\n\r\n                    const url = `${props.urlPostSimulacion}`;\r\n\r\n                    const body = {\r\n                        nombre: values.nombre,\r\n                        rut: cleanRut(values.rut),\r\n                        correo: values.correo,\r\n                        celular: cleanDigitos(values.celular),\r\n                        sueldo: cleanDigitos(values.sueldo),\r\n                        ahorro: cleanDigitos(values.ahorro)\r\n                    };\r\n\r\n                    axios\r\n                        .post(url, body, { headers: headers })\r\n                        .then((response) => {\r\n                            let data = response.data;\r\n\r\n\r\n                            if (data.idSimulacion) {\r\n                                router.push({\r\n                                    pathname: \"/resultado\",\r\n                                    query: {\r\n                                        id: data.idSimulacion,\r\n                                    },\r\n                                });\r\n                            }\r\n                        })\r\n                        .catch(e => {\r\n                            console.log(e);\r\n                        });\r\n\r\n                    */\r\n                }}\r\n            >\r\n                <WizardStep\r\n                    onSubmit={() => console.log('Step1 onSubmit')}\r\n                    validationSchema={Step1Schema}\r\n                >\r\n                    <Field name=\"nombre\">\r\n                        {({\r\n                              field,\r\n                              meta\r\n                          }) => (\r\n                            <div className=\"form-group input-wrapper\">\r\n                                <label\r\n                                    htmlFor=\"nombre\"\r\n                                    className=\"control-label\"\r\n                                >\r\n                                    Nombre\r\n                                </label>\r\n\r\n                                <input\r\n                                    {...field}\r\n                                    type=\"text\"\r\n                                    className={`form-control form-control-lg \r\n                                        ${meta.touched ? (meta.error ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                    id=\"nombre\"\r\n                                    aria-describedby=\"nombreAyuda\"\r\n                                    placeholder=\"Nombre\"\r\n                                />\r\n                                <small\r\n                                    id=\"nombreAyuda\"\r\n                                    className={`form-text ${meta.touched && meta.error ? \"is-invalid\" : \"\"\r\n                                        }`}\r\n                                >\r\n                                    {meta.touched && meta.error\r\n                                        ? meta.error\r\n                                        : \"Indicanos tu nombre y apellido.\"}\r\n                                </small>\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n                    <Field name=\"rut\">\r\n                        {({\r\n                              field,\r\n                              meta\r\n                          }) => (\r\n                            <div className=\"form-group input-wrapper\">\r\n                                <label\r\n                                    htmlFor=\"rut\"\r\n                                    className=\"control-label\"\r\n                                >\r\n                                    RUT\r\n                                </label>\r\n                                <MaskedInput\r\n                                    {...field}\r\n                                    type=\"text\"\r\n                                    mask={rutMask}\r\n                                    className={`form-control form-control-lg \r\n                                    ${meta.touched ? (meta.error ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                    id=\"rut\"\r\n                                    aria-describedby=\"rutAyuda\"\r\n                                    placeholder=\"RUT\"\r\n                                />\r\n                                <small\r\n                                    id=\"rutAyuda\"\r\n                                    className={`form-text ${meta.touched && meta.error ? \"is-invalid\" : \"\"}`}\r\n                                >\r\n                                    {meta.touched && meta.error\r\n                                        ? meta.error\r\n                                        : \"Ej. 12.345.678-9.\"}\r\n                                </small>\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n                    <Field name=\"correo\">\r\n                        {({\r\n                              field,\r\n                              meta\r\n                          }) => (\r\n                            <div className=\"form-group input-wrapper\">\r\n                                <label\r\n                                    htmlFor=\"correo\"\r\n                                    className=\"control-label\"\r\n                                >\r\n                                    Correo\r\n                                </label>\r\n                                <input\r\n                                    {...field}\r\n                                    type=\"email\"\r\n                                    className={`form-control form-control-lg \r\n                                        ${meta.touched ? (meta.error ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                    id=\"correo\"\r\n                                    aria-describedby=\"correoAyuda\"\r\n                                    placeholder=\"Correo\"\r\n                                />\r\n                                <small\r\n                                    id=\"correoAyuda\"\r\n                                    className={`form-text ${meta.touched && meta.error ? \"is-invalid\" : \"\"}`}\r\n                                >\r\n                                    {meta.touched && meta.error\r\n                                        ? meta.error\r\n                                        : \"Ej. aumentatusueldo@afpmodelo.cl\"}\r\n                                </small>\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n                    <Field name=\"celular\">\r\n                        {({\r\n                              field,\r\n                              meta\r\n                          }) => (\r\n                            <div className=\"form-group input-wrapper\">\r\n                                <label\r\n                                    htmlFor=\"celular\"\r\n                                    className=\"control-label\"\r\n                                >\r\n                                    Celular\r\n                                </label>\r\n                                <MaskedInput\r\n                                    {...field}\r\n                                    type=\"text\"\r\n                                    mask={celularMask}\r\n                                    className={`form-control form-control-lg \r\n                                    ${meta.touched ? (meta.error ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                    id=\"celular\"\r\n                                    aria-describedby=\"celularAyuda\"\r\n                                    placeholder={`9 ____ ____`}\r\n                                />\r\n                                <small\r\n                                    id=\"celularAyuda\"\r\n                                    className={`form-text ${meta.touched && meta.error ? \"is-invalid\" : \"\"}`}\r\n                                >\r\n                                    {meta.touched && meta.error\r\n                                        ? meta.error\r\n                                        : \"Ej. 9 1112 23XX\"\r\n                                    }\r\n                                </small>\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n                </WizardStep>\r\n                <WizardStep\r\n                    onSubmit={() => console.log('Step2 onSubmit')}\r\n                    validationSchema={Step2Schema}\r\n                >\r\n                    <Field name=\"sueldo\"\r\n                    >\r\n                        {({\r\n                              field,\r\n                              meta\r\n                          }) => (\r\n                            <div className=\"form-group input-wrapper\">\r\n                                <label\r\n                                    htmlFor=\"sueldo\"\r\n                                    className={\"control-label\"}>sueldo\r\n                                </label>\r\n                                <MaskedInput\r\n                                    {...field}\r\n                                    type=\"text\"\r\n                                    mask={dineroMask}\r\n                                    className={`form-control form-control-lg \r\n                                    ${meta.touched ? (meta.error ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                    id=\"sueldo\"\r\n                                    aria-describedby=\"sueldoAyuda\"\r\n                                    placeholder={`Sueldo L${iacento}quido`}\r\n                                />\r\n                                <small\r\n                                    id=\"sueldoAyuda\"\r\n                                    className={`form-text ${meta.touched && meta.error ? \"is-invalid\" : \"\"}`}\r\n                                >\r\n                                    {meta.touched && meta.error\r\n                                        ? meta.error\r\n                                        : `El sueldo l${iacento}quido que recibes luego de los descuentos legales.`\r\n                                    }\r\n                                </small>\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n                    <Field name=\"ahorro\">\r\n                        {({\r\n                              field,\r\n                              meta\r\n                          }) => (\r\n                            <div className=\"form-group input-wrapper\">\r\n                                <label\r\n                                    htmlFor=\"ahorro\"\r\n                                    className=\"control-label\"\r\n                                >\r\n                                    Monto Ahorro\r\n                                </label>\r\n                                <MaskedInput\r\n                                    {...field}\r\n                                    type=\"text\"\r\n                                    mask={dineroMask}\r\n                                    className={`form-control form-control-lg \r\n                                    ${meta.touched ? (meta.error ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                    id=\"ahorro\"\r\n                                    aria-describedby=\"ahorroAyuda\"\r\n                                    placeholder=\"Ahorro Mensual\"\r\n                                />\r\n                                <small\r\n                                    id=\"ahorroAyuda\"\r\n                                    className={`form-text ${meta.touched && meta.error ? \"is-invalid\" : \"\"}`}\r\n                                >\r\n                                    {meta.touched && meta.error\r\n                                        ? meta.error\r\n                                        : `El monto en pesos que invertir${iacento}as en tu APV.`\r\n                                    }\r\n                                </small>\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n\r\n                    <Field name=\"afp\">\r\n                        {({\r\n                              field,\r\n                              meta\r\n                          }) => (\r\n                            <div className=\"form-group input-wrapper select\">\r\n                                <label htmlFor=\"afp\">\r\n                                    Ind{iacento}canos tu AFP actual:\r\n                                </label>\r\n                                <select\r\n                                    {...field}\r\n                                    className=\"form-control form-control-lg\"\r\n                                    id=\"afp\"\r\n                                    name=\"afp\"\r\n                                >\r\n                                    {\" \"}\r\n                                    <option value=\"default\">\r\n                                        Seleccione una AFP\r\n                                    </option>\r\n                                    <option value=\"0\">AFP Capital</option>\r\n                                    <option value=\"1\">AFP Cuprum</option>\r\n                                    <option value=\"2\">AFP Habitat</option>\r\n                                    <option value=\"3\">AFP Plan Vital</option>\r\n                                    <option value=\"4\">AFP Provida</option>\r\n                                    <option value=\"6\">AFP Uno</option>\r\n                                </select>\r\n                                <small\r\n                                    id=\"ahorroAyuda\"\r\n                                    className={`form-text ${meta.touched && meta.error ? \"is-invalid\" : \"\"}`}\r\n                                >\r\n                                    {meta.touched && meta.error}\r\n                                </small>\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n\r\n                    <Field name=\"multifondo\">\r\n                        {({\r\n                              field,\r\n                              meta\r\n                          }) => (\r\n                            <div className=\"form-group input-wrapper select\">\r\n                                <label htmlFor=\"multifondo\">\r\n                                    Ind{iacento}canos tu Multifondo actual:\r\n                                </label>\r\n                                <select\r\n                                    {...field}\r\n                                    className=\"form-control form-control-lg\"\r\n                                    id=\"multifondo\"\r\n                                    name=\"multifondo\"\r\n                                >\r\n                                    {\" \"}\r\n                                    <option value=\"default\">\r\n                                        Seleccione un Multi Fondo\r\n                                    </option>\r\n                                    <option value=\"0\">A</option>\r\n                                    <option value=\"1\">B</option>\r\n                                    <option value=\"2\">C</option>\r\n                                    <option value=\"3\">D</option>\r\n                                    <option value=\"4\">E</option>\r\n                                </select>\r\n                                <small\r\n                                    id=\"multifondoAyuda\"\r\n                                    className={`form-text \r\n                                        ${meta.touched && meta.error ? \"is-invalid\" : \"\"}`}\r\n                                >\r\n                                    {meta.touched && meta.error}\r\n                                </small>\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n\r\n\r\n                </WizardStep>\r\n            </Wizard>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default APVForm;\r\n"]},"metadata":{},"sourceType":"module"}