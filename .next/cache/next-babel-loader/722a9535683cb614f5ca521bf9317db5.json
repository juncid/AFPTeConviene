{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Field } from \"formik\";\nimport { Wizard, WizardStep } from \"./WizardComponent\";\nimport { Step1Schema, Step2Schema } from \"../utils/validationSchemaWizard\";\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport MaskedInput from \"react-text-mask\";\nimport { celularMask, dineroMask, rutMask } from \"../utils/inputMask\";\nimport { cleanDigitos, cleanRut } from \"../utils/cleanInputMask\";\n\nconst APVForm = props => {\n  const aacento = \"\\u00e1\";\n  const eacento = \"\\u00e9\";\n  const iacento = \"\\u00ed\";\n  const oacento = \"\\u00f3\";\n  const uacento = \"\\u00fa\";\n  const enhe = '\\u00f1';\n  const interrogacion = '\\u00BF';\n  const router = useRouter();\n  const initialValues = {\n    nombre: '',\n    rut: '',\n    correo: '',\n    celular: '',\n    sueldo: '',\n    ahorro: '',\n    afp: '',\n    terminosycondiciones: false\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"wizardForm\",\n    children: /*#__PURE__*/_jsxs(Wizard, {\n      initialValues: initialValues,\n      onSubmit: values => {\n        console.log(values);\n        /*\r\n        const headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${props.token}`\r\n        };\r\n          const url = `${props.urlPostSimulacion}`;\r\n          const body = {\r\n            nombre: values.nombre,\r\n            rut: cleanRut(values.rut),\r\n            correo: values.correo,\r\n            celular: cleanDigitos(values.celular),\r\n            sueldo: cleanDigitos(values.sueldo),\r\n            ahorro: cleanDigitos(values.ahorro)\r\n        };\r\n          axios\r\n            .post(url, body, { headers: headers })\r\n            .then((response) => {\r\n                let data = response.data;\r\n                    if (data.idSimulacion) {\r\n                    router.push({\r\n                        pathname: \"/resultado\",\r\n                        query: {\r\n                            id: data.idSimulacion,\r\n                        },\r\n                    });\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n          */\n      },\n      children: [/*#__PURE__*/_jsxs(WizardStep, {\n        onSubmit: () => console.log('Step1 onSubmit'),\n        validationSchema: Step1Schema,\n        children: [/*#__PURE__*/_jsx(Field, {\n          name: \"nombre\",\n          children: ({\n            field,\n            meta\n          }) => /*#__PURE__*/_jsxs(\"div\", {\n            className: \"form-group input-wrapper\",\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              htmlFor: \"nombre\",\n              className: \"control-label\",\n              children: \"Nombre\"\n            }), /*#__PURE__*/_jsx(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n              type: \"text\",\n              className: `form-control form-control-lg \n                                        ${meta.touched ? meta.error ? \"is-invalid\" : \"is-valid\" : \"\"}`,\n              id: \"nombre\",\n              \"aria-describedby\": \"nombreAyuda\",\n              placeholder: \"Nombre\"\n            })), /*#__PURE__*/_jsx(\"small\", {\n              id: \"nombreAyuda\",\n              className: `form-text ${meta.touched && meta.error ? \"is-invalid\" : \"\"}`,\n              children: meta.touched && meta.error ? meta.error : \"Indicanos tu nombre y apellido.\"\n            })]\n          })\n        }), /*#__PURE__*/_jsx(Field, {\n          name: \"rut\",\n          children: ({\n            field,\n            meta\n          }) => /*#__PURE__*/_jsxs(\"div\", {\n            className: \"form-group input-wrapper\",\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              htmlFor: \"rut\",\n              className: \"control-label\",\n              children: \"RUT\"\n            }), /*#__PURE__*/_jsx(MaskedInput, _objectSpread(_objectSpread({}, field), {}, {\n              type: \"text\",\n              mask: rutMask,\n              className: `form-control form-control-lg \n                                    ${meta.touched ? meta.error ? \"is-invalid\" : \"is-valid\" : \"\"}`,\n              id: \"rut\",\n              \"aria-describedby\": \"rutAyuda\",\n              placeholder: \"RUT\"\n            })), /*#__PURE__*/_jsx(\"small\", {\n              id: \"rutAyuda\",\n              className: `form-text ${meta.touched && meta.error ? \"is-invalid\" : \"\"}`,\n              children: meta.touched && meta.error ? meta.error : \"Ej. 12.345.678-9.\"\n            })]\n          })\n        }), /*#__PURE__*/_jsx(Field, {\n          name: \"correo\",\n          children: ({\n            field,\n            meta\n          }) => /*#__PURE__*/_jsxs(\"div\", {\n            className: \"form-group input-wrapper\",\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              htmlFor: \"correo\",\n              className: \"control-label\",\n              children: \"Correo\"\n            }), /*#__PURE__*/_jsx(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n              type: \"email\",\n              className: `form-control form-control-lg \n                                        ${meta.touched ? meta.error ? \"is-invalid\" : \"is-valid\" : \"\"}`,\n              id: \"correo\",\n              \"aria-describedby\": \"correoAyuda\",\n              placeholder: \"Correo\"\n            })), /*#__PURE__*/_jsx(\"small\", {\n              id: \"correoAyuda\",\n              className: `form-text ${meta.touched && meta.error ? \"is-invalid\" : \"\"}`,\n              children: meta.touched && meta.error ? meta.error : \"Ej. aumentatusueldo@afpmodelo.cl\"\n            })]\n          })\n        }), /*#__PURE__*/_jsx(Field, {\n          name: \"celular\",\n          children: ({\n            field,\n            meta\n          }) => /*#__PURE__*/_jsxs(\"div\", {\n            className: \"form-group input-wrapper\",\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              htmlFor: \"celular\",\n              className: \"control-label\",\n              children: \"Celular\"\n            }), /*#__PURE__*/_jsx(MaskedInput, _objectSpread(_objectSpread({}, field), {}, {\n              type: \"text\",\n              mask: celularMask,\n              className: `form-control form-control-lg \n                                    ${meta.touched ? meta.error ? \"is-invalid\" : \"is-valid\" : \"\"}`,\n              id: \"celular\",\n              \"aria-describedby\": \"celularAyuda\",\n              placeholder: `9 ____ ____`\n            })), /*#__PURE__*/_jsx(\"small\", {\n              id: \"celularAyuda\",\n              className: `form-text ${meta.touched && meta.error ? \"is-invalid\" : \"\"}`,\n              children: meta.touched && meta.error ? meta.error : \"Ej. 9 1112 23XX\"\n            })]\n          })\n        })]\n      }), /*#__PURE__*/_jsxs(WizardStep, {\n        onSubmit: () => console.log('Step2 onSubmit'),\n        validationSchema: Step2Schema,\n        children: [/*#__PURE__*/_jsx(Field, {\n          name: \"sueldo\",\n          children: ({\n            field,\n            meta\n          }) => /*#__PURE__*/_jsxs(\"div\", {\n            className: \"form-group input-wrapper\",\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              htmlFor: \"sueldo\",\n              className: \"control-label\",\n              children: \"sueldo\"\n            }), /*#__PURE__*/_jsx(MaskedInput, _objectSpread(_objectSpread({}, field), {}, {\n              type: \"text\",\n              mask: dineroMask,\n              className: `form-control form-control-lg \n                                    ${meta.touched ? meta.error ? \"is-invalid\" : \"is-valid\" : \"\"}`,\n              id: \"sueldo\",\n              \"aria-describedby\": \"sueldoAyuda\",\n              placeholder: `Sueldo L${iacento}quido`\n            })), /*#__PURE__*/_jsx(\"small\", {\n              id: \"sueldoAyuda\",\n              className: `form-text ${meta.touched && meta.error ? \"is-invalid\" : \"\"}`,\n              children: meta.touched && meta.error ? meta.error : `El sueldo l${iacento}quido que recibes luego de los descuentos legales.`\n            })]\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group input-wrapper\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"ahorro\",\n            className: \"control-label\",\n            children: \"Monto Ahorro\"\n          }), /*#__PURE__*/_jsx(Field, {\n            name: \"ahorro\",\n            children: ({\n              field,\n              form: {\n                touched,\n                errors\n              }\n            }) => /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsx(MaskedInput, _objectSpread(_objectSpread({}, field), {}, {\n                type: \"text\",\n                mask: dineroMask,\n                className: `form-control form-control-lg ${touched.ahorro ? errors.ahorro ? \"is-invalid\" : \"is-valid\" : \"\"}`,\n                id: \"ahorro\",\n                \"aria-describedby\": \"ahorroAyuda\",\n                placeholder: \"Ahorro Mensual\"\n              })), /*#__PURE__*/_jsx(\"small\", {\n                id: \"ahorroAyuda\",\n                className: `form-text ${touched.ahorro && errors.ahorro ? \"is-invalid\" : \"\"}`,\n                children: touched.ahorro && errors.ahorro ? errors.ahorro : `El monto en pesos que invertir${iacento}as en tu APV.`\n              })]\n            })\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group input-wrapper select\",\n          children: [/*#__PURE__*/_jsxs(\"label\", {\n            htmlFor: \"afp\",\n            children: [\"Ind\", iacento, \"canos tu AFP actual:\"]\n          }), /*#__PURE__*/_jsx(Field, {\n            name: \"afp\",\n            children: ({\n              field,\n              form: {\n                touched,\n                errors\n              }\n            }) => /*#__PURE__*/_jsxs(_Fragment, {\n              children: [console.log(field), /*#__PURE__*/_jsxs(\"select\", _objectSpread(_objectSpread({}, field), {}, {\n                className: \"form-control form-control-lg\",\n                id: \"afp\",\n                name: \"afp\",\n                children: [\" \", /*#__PURE__*/_jsx(\"option\", {\n                  value: \"default\",\n                  children: \"Seleccione una AFP\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"0\",\n                  children: \"AFP Capital\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"1\",\n                  children: \"AFP Cuprum\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"2\",\n                  children: \"AFP Habitat\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"3\",\n                  children: \"AFP Plan Vital\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"4\",\n                  children: \"AFP Provida\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"6\",\n                  children: \"AFP Uno\"\n                })]\n              })), /*#__PURE__*/_jsxs(\"small\", {\n                id: \"ahorroAyuda\",\n                className: `form-text ${touched.afp && errors.afp ? \"is-invalid\" : \"\"}`,\n                children: [console.log(errors), touched.afp && errors.afp]\n              })]\n            })\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group input-wrapper select\",\n          children: [/*#__PURE__*/_jsxs(\"label\", {\n            htmlFor: \"multifondo\",\n            children: [\"Ind\", iacento, \"canos tu Multifondo actual:\"]\n          }), /*#__PURE__*/_jsx(Field, {\n            name: \"multifondo\",\n            children: ({\n              field,\n              form: {\n                touched,\n                errors\n              }\n            }) => /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsxs(\"select\", _objectSpread(_objectSpread({}, field), {}, {\n                className: \"form-control form-control-lg\",\n                id: \"multifondo\",\n                name: \"multifondo\",\n                children: [\" \", /*#__PURE__*/_jsx(\"option\", {\n                  value: \"default\",\n                  children: \"Seleccione un Multi Fondo\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"0\",\n                  children: \"A\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"1\",\n                  children: \"B\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"2\",\n                  children: \"C\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"3\",\n                  children: \"D\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"4\",\n                  children: \"E\"\n                })]\n              })), /*#__PURE__*/_jsx(\"small\", {\n                id: \"multifondoAyuda\",\n                className: `form-text ${touched.multifondo && errors.multifondo ? \"is-invalid\" : \"\"}`,\n                children: touched.multifondo && errors.multifondo\n              })]\n            })\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group input-wrapper\",\n          children: [/*#__PURE__*/_jsxs(\"label\", {\n            htmlFor: \"retiro\",\n            children: [\"Ind\", iacento, \"canos tu Multifondo actual:\"]\n          }), ({\n            field,\n            form: {\n              touched,\n              errors\n            }\n          }) => /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n              name: \"retiroGroup\",\n              id: \"retiroOpcion1\",\n              type: \"radio\",\n              value: \"retiroSi\" // could be something else for output?\n              ,\n              checked: id === value,\n              onChange: onChange,\n              onBlur: onBlur,\n              className: \"radio-button\"\n            }, props)), /*#__PURE__*/_jsx(\"label\", {\n              htmlFor: \"retiroOpcion1\",\n              children: \"Si\"\n            })]\n          })]\n        })]\n      })]\n    })\n  });\n};\n\nexport default APVForm;","map":{"version":3,"sources":["C:/Users/MSI/Documents/GitHub/AFPTeConviene/components/ApvForm.js"],"names":["React","useState","useEffect","Field","Wizard","WizardStep","Step1Schema","Step2Schema","useRouter","axios","MaskedInput","celularMask","dineroMask","rutMask","cleanDigitos","cleanRut","APVForm","props","aacento","eacento","iacento","oacento","uacento","enhe","interrogacion","router","initialValues","nombre","rut","correo","celular","sueldo","ahorro","afp","terminosycondiciones","values","console","log","field","meta","touched","error","form","errors","multifondo","id","value","onChange","onBlur"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Field } from \"formik\";\r\nimport { Wizard, WizardStep } from \"./WizardComponent\";\r\nimport { Step1Schema, Step2Schema} from \"../utils/validationSchemaWizard\";\r\nimport { useRouter } from 'next/router';\r\nimport axios from 'axios';\r\nimport MaskedInput from \"react-text-mask\";\r\nimport { celularMask, dineroMask, rutMask } from \"../utils/inputMask\"\r\nimport { cleanDigitos, cleanRut } from \"../utils/cleanInputMask\"\r\n\r\nconst APVForm = (props) => {\r\n\r\n    const aacento = \"\\u00e1\";\r\n    const eacento = \"\\u00e9\";\r\n    const iacento = \"\\u00ed\";\r\n    const oacento = \"\\u00f3\";\r\n    const uacento = \"\\u00fa\";\r\n    const enhe = '\\u00f1';\r\n    const interrogacion = '\\u00BF';\r\n\r\n    const router = useRouter()\r\n\r\n    const initialValues = {\r\n        nombre: '',\r\n        rut: '',\r\n        correo: '',\r\n        celular: '',\r\n        sueldo: '',\r\n        ahorro: '',\r\n        afp:'',\r\n        terminosycondiciones: false,\r\n    };\r\n\r\n    return (\r\n        <div className='wizardForm'>\r\n            <Wizard\r\n                initialValues={initialValues}\r\n                onSubmit={values => {\r\n                    console.log(values);\r\n                    /*\r\n                    const headers = {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": `Bearer ${props.token}`\r\n                    };\r\n\r\n                    const url = `${props.urlPostSimulacion}`;\r\n\r\n                    const body = {\r\n                        nombre: values.nombre,\r\n                        rut: cleanRut(values.rut),\r\n                        correo: values.correo,\r\n                        celular: cleanDigitos(values.celular),\r\n                        sueldo: cleanDigitos(values.sueldo),\r\n                        ahorro: cleanDigitos(values.ahorro)\r\n                    };\r\n\r\n                    axios\r\n                        .post(url, body, { headers: headers })\r\n                        .then((response) => {\r\n                            let data = response.data;\r\n\r\n\r\n                            if (data.idSimulacion) {\r\n                                router.push({\r\n                                    pathname: \"/resultado\",\r\n                                    query: {\r\n                                        id: data.idSimulacion,\r\n                                    },\r\n                                });\r\n                            }\r\n                        })\r\n                        .catch(e => {\r\n                            console.log(e);\r\n                        });\r\n\r\n                    */\r\n                }}\r\n            >\r\n                <WizardStep\r\n                    onSubmit={() => console.log('Step1 onSubmit')}\r\n                    validationSchema={Step1Schema}\r\n                >\r\n                    <Field name=\"nombre\">\r\n                        {({\r\n                              field,\r\n                              meta\r\n                          }) => (\r\n                                <div className=\"form-group input-wrapper\">\r\n                                    <label\r\n                                        htmlFor=\"nombre\"\r\n                                        className=\"control-label\"\r\n                                    >\r\n                                        Nombre\r\n                                    </label>\r\n\r\n                                    <input\r\n                                        {...field}\r\n                                        type=\"text\"\r\n                                        className={`form-control form-control-lg \r\n                                        ${meta.touched ? (meta.error ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                        id=\"nombre\"\r\n                                        aria-describedby=\"nombreAyuda\"\r\n                                        placeholder=\"Nombre\"\r\n                                    />\r\n                                    <small\r\n                                        id=\"nombreAyuda\"\r\n                                        className={`form-text ${meta.touched && meta.error ? \"is-invalid\" : \"\"\r\n                                            }`}\r\n                                    >\r\n                                        {meta.touched && meta.error\r\n                                            ? meta.error\r\n                                            : \"Indicanos tu nombre y apellido.\"}\r\n                                    </small>\r\n                                </div>\r\n                        )}\r\n                    </Field>\r\n                    <Field name=\"rut\">\r\n                        {({\r\n                            field,\r\n                            meta\r\n                          }) => (\r\n                            <div className=\"form-group input-wrapper\">\r\n                                <label\r\n                                    htmlFor=\"rut\"\r\n                                    className=\"control-label\"\r\n                                >\r\n                                    RUT\r\n                                </label>\r\n                                <MaskedInput\r\n                                    {...field}\r\n                                    type=\"text\"\r\n                                    mask={rutMask}\r\n                                    className={`form-control form-control-lg \r\n                                    ${meta.touched ? (meta.error ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                    id=\"rut\"\r\n                                    aria-describedby=\"rutAyuda\"\r\n                                    placeholder=\"RUT\"\r\n                                />\r\n                                <small\r\n                                    id=\"rutAyuda\"\r\n                                    className={`form-text ${meta.touched && meta.error ? \"is-invalid\" : \"\"}`}\r\n                                >\r\n                                    {meta.touched && meta.error\r\n                                        ? meta.error\r\n                                        : \"Ej. 12.345.678-9.\"}\r\n                                </small>\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n                    <Field name=\"correo\">\r\n                        {({\r\n                            field,\r\n                            meta\r\n                          }) => (\r\n                            <div className=\"form-group input-wrapper\">\r\n                                <label\r\n                                    htmlFor=\"correo\"\r\n                                    className=\"control-label\"\r\n                                >\r\n                                    Correo\r\n                                </label>\r\n                                <input\r\n                                    {...field}\r\n                                    type=\"email\"\r\n                                    className={`form-control form-control-lg \r\n                                        ${meta.touched ? (meta.error ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                    id=\"correo\"\r\n                                    aria-describedby=\"correoAyuda\"\r\n                                    placeholder=\"Correo\"\r\n                                />\r\n                                <small\r\n                                    id=\"correoAyuda\"\r\n                                    className={`form-text ${meta.touched && meta.error ? \"is-invalid\" : \"\"}`}\r\n                                >\r\n                                    {meta.touched && meta.error\r\n                                        ? meta.error\r\n                                        : \"Ej. aumentatusueldo@afpmodelo.cl\"}\r\n                                </small>\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n                    <Field name=\"celular\">\r\n                        {({\r\n                            field,\r\n                            meta\r\n                          }) => (\r\n                            <div className=\"form-group input-wrapper\">\r\n                                <label\r\n                                    htmlFor=\"celular\"\r\n                                    className=\"control-label\"\r\n                                >\r\n                                    Celular\r\n                                </label>\r\n                                <MaskedInput\r\n                                    {...field}\r\n                                    type=\"text\"\r\n                                    mask={celularMask}\r\n                                    className={`form-control form-control-lg \r\n                                    ${meta.touched ? (meta.error ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                    id=\"celular\"\r\n                                    aria-describedby=\"celularAyuda\"\r\n                                    placeholder={`9 ____ ____`}\r\n                                />\r\n                                <small\r\n                                    id=\"celularAyuda\"\r\n                                    className={`form-text ${meta.touched && meta.error ? \"is-invalid\" : \"\"}`}\r\n                                >\r\n                                    {meta.touched && meta.error\r\n                                        ? meta.error\r\n                                        : \"Ej. 9 1112 23XX\"\r\n                                    }\r\n                                </small>\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n                </WizardStep>\r\n                <WizardStep\r\n                    onSubmit={() => console.log('Step2 onSubmit')}\r\n                    validationSchema={Step2Schema}\r\n                >\r\n                    <Field name=\"sueldo\"\r\n                    >\r\n                        {({\r\n                            field,\r\n                            meta\r\n                          }) => (\r\n                            <div className=\"form-group input-wrapper\">\r\n                                <label\r\n                                    htmlFor=\"sueldo\"\r\n                                    className={\"control-label\"}>sueldo\r\n                                </label>\r\n                                <MaskedInput\r\n                                    {...field}\r\n                                    type=\"text\"\r\n                                    mask={dineroMask}\r\n                                    className={`form-control form-control-lg \r\n                                    ${meta.touched ? (meta.error ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                    id=\"sueldo\"\r\n                                    aria-describedby=\"sueldoAyuda\"\r\n                                    placeholder={`Sueldo L${iacento}quido`}\r\n                                />\r\n                                <small\r\n                                    id=\"sueldoAyuda\"\r\n                                    className={`form-text ${meta.touched && meta.error ? \"is-invalid\" : \"\"}`}\r\n                                >\r\n                                    {meta.touched && meta.error\r\n                                        ? meta.error\r\n                                        : `El sueldo l${iacento}quido que recibes luego de los descuentos legales.`\r\n                                    }\r\n                                </small>\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n\r\n                    <div className=\"form-group input-wrapper\">\r\n                        <label\r\n                            htmlFor=\"ahorro\"\r\n                            className=\"control-label\"\r\n                        >\r\n                            Monto Ahorro\r\n                        </label>\r\n                        <Field name=\"ahorro\">\r\n                            {({\r\n                                  field,\r\n                                  form: { touched, errors },\r\n                              }) => (\r\n                                <>\r\n                                    <MaskedInput\r\n                                        {...field}\r\n                                        type=\"text\"\r\n                                        mask={dineroMask}\r\n                                        className={`form-control form-control-lg ${touched.ahorro ? (errors.ahorro ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                        id=\"ahorro\"\r\n                                        aria-describedby=\"ahorroAyuda\"\r\n                                        placeholder=\"Ahorro Mensual\"\r\n                                    />\r\n                                    <small\r\n                                        id=\"ahorroAyuda\"\r\n                                        className={`form-text ${touched.ahorro && errors.ahorro ? \"is-invalid\" : \"\"}`}\r\n                                    >\r\n                                        {touched.ahorro && errors.ahorro\r\n                                            ? errors.ahorro\r\n                                            : `El monto en pesos que invertir${iacento}as en tu APV.`}\r\n                                    </small>\r\n                                </>\r\n                            )}\r\n                        </Field>\r\n                    </div>\r\n\r\n                    <div className=\"form-group input-wrapper select\">\r\n                        <label htmlFor=\"afp\">\r\n                            Ind{iacento}canos tu AFP actual:\r\n                        </label>\r\n                        <Field name=\"afp\">\r\n                            {({\r\n                                  field,\r\n                                  form: { touched, errors },\r\n                              }) => (\r\n                                <>\r\n                                    {console.log(field)}\r\n                                    <select\r\n                                        {...field}\r\n                                        className=\"form-control form-control-lg\"\r\n                                        id=\"afp\"\r\n                                        name=\"afp\"\r\n                                    >\r\n                                        {\" \"}\r\n                                        <option value=\"default\">\r\n                                            Seleccione una AFP\r\n                                        </option>\r\n                                        <option value=\"0\">AFP Capital</option>\r\n                                        <option value=\"1\">AFP Cuprum</option>\r\n                                        <option value=\"2\">AFP Habitat</option>\r\n                                        <option value=\"3\">AFP Plan Vital</option>\r\n                                        <option value=\"4\">AFP Provida</option>\r\n                                        <option value=\"6\">AFP Uno</option>\r\n                                    </select>\r\n                                    <small\r\n                                        id=\"ahorroAyuda\"\r\n                                        className={`form-text ${touched.afp && errors.afp ? \"is-invalid\" : \"\"}`}\r\n                                    >\r\n                                        {console.log(errors)}\r\n                                        {touched.afp && errors.afp}\r\n                                    </small>\r\n                                </>\r\n                            )}\r\n                        </Field>\r\n                    </div>\r\n                    <div className=\"form-group input-wrapper select\">\r\n                        <label htmlFor=\"multifondo\">\r\n                            Ind{iacento}canos tu Multifondo actual:\r\n                        </label>\r\n                        <Field name=\"multifondo\">\r\n                            {({\r\n                                  field,\r\n                                  form: { touched, errors },\r\n                              }) => (\r\n                                <>\r\n                                    <select\r\n                                        {...field}\r\n                                        className=\"form-control form-control-lg\"\r\n                                        id=\"multifondo\"\r\n                                        name=\"multifondo\"\r\n                                    >\r\n                                        {\" \"}\r\n                                        <option value=\"default\">\r\n                                            Seleccione un Multi Fondo\r\n                                        </option>\r\n                                        <option value=\"0\">A</option>\r\n                                        <option value=\"1\">B</option>\r\n                                        <option value=\"2\">C</option>\r\n                                        <option value=\"3\">D</option>\r\n                                        <option value=\"4\">E</option>\r\n                                    </select>\r\n                                    <small\r\n                                        id=\"multifondoAyuda\"\r\n                                        className={`form-text ${touched.multifondo && errors.multifondo ? \"is-invalid\" : \"\"}`}\r\n                                    >\r\n                                        {touched.multifondo && errors.multifondo}\r\n                                    </small>\r\n                                </>\r\n                            )}\r\n                        </Field>\r\n                    </div>\r\n                    <div className=\"form-group input-wrapper\">\r\n                        <label htmlFor=\"retiro\">\r\n                            Ind{iacento}canos tu Multifondo actual:\r\n                        </label>\r\n                        {({\r\n                              field,\r\n                              form: { touched, errors },\r\n                          }) => (\r\n                            <>\r\n                                <input\r\n                                    {...field}\r\n                                    name=\"retiroGroup\"\r\n                                    id=\"retiroOpcion1\"\r\n                                    type=\"radio\"\r\n                                    value=\"retiroSi\" // could be something else for output?\r\n                                    checked={id === value}\r\n                                    onChange={onChange}\r\n                                    onBlur={onBlur}\r\n                                    className=\"radio-button\"\r\n                                    {...props}\r\n                                    />\r\n                                <label htmlFor=\"retiroOpcion1\">\r\n                                    Si\r\n                                </label>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </WizardStep>\r\n            </Wizard>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default APVForm;\r\n"]},"metadata":{},"sourceType":"module"}