{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Field } from \"formik\";\nimport { Wizard, WizardStep } from \"./WizardComponent\";\nimport { Step1Schema, Step2Schema } from \"../utils/validationSchemaWizard\";\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport MaskedInput from \"react-text-mask\";\nimport { celularMask, dineroMask, rutMask } from \"../utils/inputMask\";\nimport { cleanDigitos, cleanRut } from \"../utils/cleanInputMask\";\n\nvar APVForm = function APVForm(props) {\n  _s();\n\n  var aacento = \"\\xE1\";\n  var eacento = \"\\xE9\";\n  var iacento = \"\\xED\";\n  var oacento = \"\\xF3\";\n  var uacento = \"\\xFA\";\n  var enhe = \"\\xF1\";\n  var interrogacion = \"\\xBF\";\n  var router = useRouter();\n  var initialValues = {\n    nombre: '',\n    rut: '',\n    correo: '',\n    celular: '',\n    sueldo: '',\n    ahorro: '',\n    terminosycondiciones: false\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"wizardForm\",\n    children: /*#__PURE__*/_jsxs(Wizard, {\n      initialValues: initialValues,\n      onSubmit: function onSubmit(values) {\n        var headers = {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \".concat(props.token)\n        };\n        var url = \"\".concat(props.urlPostSimulacion);\n        var body = {\n          nombre: values.nombre,\n          rut: cleanRut(values.rut),\n          correo: values.correo,\n          celular: cleanDigitos(values.celular),\n          sueldo: cleanDigitos(values.sueldo),\n          ahorro: cleanDigitos(values.ahorro)\n        };\n        axios.post(url, body, {\n          headers: headers\n        }).then(function (response) {\n          var data = response.data;\n\n          if (data.idSimulacion) {\n            router.push({\n              pathname: \"/resultado\",\n              query: {\n                id: data.idSimulacion\n              }\n            });\n          }\n        })[\"catch\"](function (e) {\n          console.log(e);\n        });\n      },\n      children: [/*#__PURE__*/_jsxs(WizardStep, {\n        onSubmit: function onSubmit() {\n          return console.log('Step1 onSubmit');\n        },\n        validationSchema: Step1Schema,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group input-wrapper\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"nombre\",\n            className: \"control-label\",\n            children: \"Nombre\"\n          }), /*#__PURE__*/_jsx(Field, {\n            name: \"nombre\",\n            children: function children(_ref) {\n              var field = _ref.field,\n                  _ref$form = _ref.form,\n                  touched = _ref$form.touched,\n                  errors = _ref$form.errors;\n              return /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n                  type: \"text\",\n                  className: \"form-control form-control-lg \".concat(touched.nombre ? errors.nombre ? \"is-invalid\" : \"is-valid\" : \"\"),\n                  id: \"nombre\",\n                  \"aria-describedby\": \"nombreAyuda\",\n                  placeholder: \"Nombre\"\n                })), /*#__PURE__*/_jsx(\"small\", {\n                  id: \"nombreAyuda\",\n                  className: \"form-text \".concat(touched.nombre && errors.nombre ? \"is-invalid\" : \"\"),\n                  children: touched.nombre && errors.nombre ? errors.nombre : \"Indicanos tu nombre y apellido.\"\n                })]\n              });\n            }\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group input-wrapper\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"rut\",\n            className: \"control-label\",\n            children: \"RUT\"\n          }), /*#__PURE__*/_jsx(Field, {\n            name: \"rut\",\n            children: function children(_ref2) {\n              var field = _ref2.field,\n                  _ref2$form = _ref2.form,\n                  touched = _ref2$form.touched,\n                  errors = _ref2$form.errors;\n              return /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(MaskedInput, _objectSpread(_objectSpread({}, field), {}, {\n                  type: \"text\",\n                  mask: rutMask,\n                  className: \"form-control form-control-lg \".concat(touched.rut ? errors.rut ? \"is-invalid\" : \"is-valid\" : \"\"),\n                  id: \"rut\",\n                  \"aria-describedby\": \"rutAyuda\",\n                  placeholder: \"RUT\"\n                })), /*#__PURE__*/_jsx(\"small\", {\n                  id: \"rutAyuda\",\n                  className: \"form-text \".concat(touched.rut && errors.rut ? \"is-invalid\" : \"\"),\n                  children: touched.rut && errors.rut ? errors.rut : \"Ej. 12.345.678-9.\"\n                })]\n              });\n            }\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group input-wrapper\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"correo\",\n            className: \"control-label\",\n            children: \"Correo\"\n          }), /*#__PURE__*/_jsx(Field, {\n            name: \"correo\",\n            children: function children(_ref3) {\n              var field = _ref3.field,\n                  _ref3$form = _ref3.form,\n                  touched = _ref3$form.touched,\n                  errors = _ref3$form.errors;\n              return /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n                  type: \"email\",\n                  className: \"form-control form-control-lg \".concat(touched.correo ? errors.correo ? 'is-invalid' : 'is-valid' : ''),\n                  id: \"correo\",\n                  \"aria-describedby\": \"correoAyuda\",\n                  placeholder: \"Correo\"\n                })), /*#__PURE__*/_jsx(\"small\", {\n                  id: \"correoAyuda\",\n                  className: \"form-text \".concat(touched.correo && errors.correo & \"is-invalid\"),\n                  children: touched.correo && errors.correo ? errors.correo : \"Ej. aumentatusueldo@afpmodelo.cl\"\n                })]\n              });\n            }\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group input-wrapper\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"celular\",\n            className: \"control-label\",\n            children: \"Celular\"\n          }), /*#__PURE__*/_jsx(Field, {\n            name: \"celular\",\n            children: function children(_ref4) {\n              var field = _ref4.field,\n                  _ref4$form = _ref4.form,\n                  touched = _ref4$form.touched,\n                  errors = _ref4$form.errors;\n              return /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(MaskedInput, _objectSpread(_objectSpread({}, field), {}, {\n                  type: \"text\",\n                  mask: celularMask,\n                  className: \"form-control form-control-lg \".concat(touched.celular ? errors.celular ? \"is-invalid\" : \"is-valid\" : \"\"),\n                  id: \"celular\",\n                  \"aria-describedby\": \"celularAyuda\",\n                  placeholder: \"9 ____ ____\"\n                })), /*#__PURE__*/_jsx(\"small\", {\n                  id: \"celularAyuda\",\n                  className: \"form-text \".concat(touched.celular && errors.celular && \"is-invalid\"),\n                  children: touched.celular && errors.celular ? errors.celular : \"Ej. 9 1112 23XX\"\n                })]\n              });\n            }\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(WizardStep, {\n        onSubmit: function onSubmit() {\n          return console.log('Step2 onSubmit');\n        },\n        validationSchema: Step2Schema,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group input-wrapper\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"sueldo\",\n            className: \"control-label\",\n            children: \"sueldo\"\n          }), /*#__PURE__*/_jsx(Field, {\n            name: \"sueldo\",\n            children: function children(_ref5) {\n              var field = _ref5.field,\n                  _ref5$form = _ref5.form,\n                  touched = _ref5$form.touched,\n                  errors = _ref5$form.errors;\n              return /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(MaskedInput, _objectSpread(_objectSpread({}, field), {}, {\n                  type: \"text\",\n                  mask: dineroMask,\n                  className: \"form-control form-control-lg \".concat(touched.sueldo ? errors.sueldo ? \"is-invalid\" : \"is-valid\" : \"\"),\n                  id: \"sueldo\",\n                  \"aria-describedby\": \"sueldoAyuda\",\n                  placeholder: \"Sueldo L\".concat(iacento, \"quido\")\n                })), /*#__PURE__*/_jsx(\"small\", {\n                  id: \"sueldoAyuda\",\n                  className: \"form-text \\n                                                    \".concat(touched.sueldo && errors.sueldo ? \"is-invalid\" : \"\"),\n                  children: touched.sueldo && errors.sueldo ? errors.sueldo : \"El sueldo l\".concat(iacento, \"quido que recibes luego de los descuentos legales.\")\n                })]\n              });\n            }\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group input-wrapper\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"ahorro\",\n            className: \"control-label\",\n            children: \"Monto Ahorro\"\n          }), /*#__PURE__*/_jsx(Field, {\n            name: \"ahorro\",\n            children: function children(_ref6) {\n              var field = _ref6.field,\n                  _ref6$form = _ref6.form,\n                  touched = _ref6$form.touched,\n                  errors = _ref6$form.errors;\n              return /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(MaskedInput, _objectSpread(_objectSpread({}, field), {}, {\n                  type: \"text\",\n                  mask: dineroMask,\n                  className: \"form-control form-control-lg \".concat(touched.ahorro ? errors.ahorro ? \"is-invalid\" : \"is-valid\" : \"\"),\n                  id: \"ahorro\",\n                  \"aria-describedby\": \"ahorroAyuda\",\n                  placeholder: \"Ahorro Mensual\"\n                })), /*#__PURE__*/_jsx(\"small\", {\n                  id: \"ahorroAyuda\",\n                  className: \"form-text \".concat(touched.ahorro && errors.ahorro ? \"is-invalid\" : \"\"),\n                  children: touched.ahorro && errors.ahorro ? errors.ahorro : \"El monto en pesos que invertir\".concat(iacento, \"as en tu APV.\")\n                })]\n              });\n            }\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group input-wrapper select\",\n          children: [/*#__PURE__*/_jsxs(\"label\", {\n            htmlFor: \"afp\",\n            children: [\"Ind\", iacento, \"canos tu AFP actual:\"]\n          }), /*#__PURE__*/_jsx(Field, {\n            name: \"afp\",\n            children: function children(_ref7) {\n              var field = _ref7.field,\n                  _ref7$form = _ref7.form,\n                  touched = _ref7$form.touched,\n                  errors = _ref7$form.errors;\n              return /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsxs(\"select\", _objectSpread(_objectSpread({}, field), {}, {\n                  className: \"form-control form-control-lg\",\n                  id: \"afp\",\n                  name: \"afp\",\n                  children: [\" \", /*#__PURE__*/_jsx(\"option\", {\n                    value: \"default\",\n                    children: \"Seleccione una AFP\"\n                  }), /*#__PURE__*/_jsx(\"option\", {\n                    value: \"0\",\n                    children: \"AFP Capital\"\n                  }), /*#__PURE__*/_jsx(\"option\", {\n                    value: \"1\",\n                    children: \"AFP Cuprum\"\n                  }), /*#__PURE__*/_jsx(\"option\", {\n                    value: \"2\",\n                    children: \"AFP Habitat\"\n                  }), /*#__PURE__*/_jsx(\"option\", {\n                    value: \"3\",\n                    children: \"AFP Plan Vital\"\n                  }), /*#__PURE__*/_jsx(\"option\", {\n                    value: \"4\",\n                    children: \"AFP Provida\"\n                  }), /*#__PURE__*/_jsx(\"option\", {\n                    value: \"6\",\n                    children: \"AFP Uno\"\n                  })]\n                })), /*#__PURE__*/_jsx(\"small\", {\n                  id: \"ahorroAyuda\",\n                  className: \"form-text \".concat(touched.afp && errors.afp ? \"is-invalid\" : \"\"),\n                  children: touched.afp && errors.afp ? errors.afp : \"El monto en pesos que invertir\".concat(iacento, \"as en tu APV.\")\n                })]\n              });\n            }\n          })]\n        })]\n      })]\n    })\n  });\n};\n\n_s(APVForm, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = APVForm;\nexport default APVForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"APVForm\");","map":{"version":3,"sources":["C:/Users/juanc/source/repos/AFPTeConviene/components/ApvForm.js"],"names":["React","useState","useEffect","Field","Wizard","WizardStep","Step1Schema","Step2Schema","useRouter","axios","MaskedInput","celularMask","dineroMask","rutMask","cleanDigitos","cleanRut","APVForm","props","aacento","eacento","iacento","oacento","uacento","enhe","interrogacion","router","initialValues","nombre","rut","correo","celular","sueldo","ahorro","terminosycondiciones","values","headers","token","url","urlPostSimulacion","body","post","then","response","data","idSimulacion","push","pathname","query","id","e","console","log","field","form","touched","errors","afp"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Field } from \"formik\";\r\nimport { Wizard, WizardStep } from \"./WizardComponent\";\r\nimport { Step1Schema, Step2Schema} from \"../utils/validationSchemaWizard\";\r\nimport { useRouter } from 'next/router';\r\nimport axios from 'axios';\r\nimport MaskedInput from \"react-text-mask\";\r\nimport { celularMask, dineroMask, rutMask } from \"../utils/inputMask\"\r\nimport { cleanDigitos, cleanRut } from \"../utils/cleanInputMask\"\r\n\r\nconst APVForm = (props) => {\r\n\r\n    const aacento = \"\\u00e1\";\r\n    const eacento = \"\\u00e9\";\r\n    const iacento = \"\\u00ed\";\r\n    const oacento = \"\\u00f3\";\r\n    const uacento = \"\\u00fa\";\r\n    const enhe = '\\u00f1';\r\n    const interrogacion = '\\u00BF';\r\n\r\n    const router = useRouter()\r\n\r\n    const initialValues = {\r\n        nombre: '',\r\n        rut: '',\r\n        correo: '',\r\n        celular: '',\r\n        sueldo: '',\r\n        ahorro: '',\r\n        terminosycondiciones: false,\r\n    };\r\n\r\n    return (\r\n        <div className='wizardForm'>\r\n            <Wizard\r\n                initialValues={initialValues}\r\n                onSubmit={values => {\r\n                    const headers = {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": `Bearer ${props.token}`\r\n                    };\r\n\r\n                    const url = `${props.urlPostSimulacion}`;\r\n\r\n                    const body = {\r\n                        nombre: values.nombre,\r\n                        rut: cleanRut(values.rut),\r\n                        correo: values.correo,\r\n                        celular: cleanDigitos(values.celular),\r\n                        sueldo: cleanDigitos(values.sueldo),\r\n                        ahorro: cleanDigitos(values.ahorro)\r\n                    };\r\n\r\n                    axios\r\n                        .post(url, body, { headers: headers })\r\n                        .then((response) => {\r\n                            let data = response.data;\r\n\r\n\r\n                            if (data.idSimulacion) {\r\n                                router.push({\r\n                                    pathname: \"/resultado\",\r\n                                    query: {\r\n                                        id: data.idSimulacion,\r\n                                    },\r\n                                });\r\n                            }\r\n                        })\r\n                        .catch(e => {\r\n                            console.log(e);\r\n                        });\r\n\r\n                }}\r\n            >\r\n                <WizardStep\r\n                    onSubmit={() => console.log('Step1 onSubmit')}\r\n                    validationSchema={Step1Schema}\r\n                >\r\n                    <div className=\"form-group input-wrapper\">\r\n                        <label\r\n                            htmlFor=\"nombre\"\r\n                            className=\"control-label\"\r\n                        >\r\n                            Nombre\r\n                        </label>\r\n                        <Field name=\"nombre\">\r\n                            {({\r\n                                  field,\r\n                                  form: { touched, errors },\r\n                              }) => (\r\n                                <>\r\n                                    <input\r\n                                        {...field}\r\n                                        type=\"text\"\r\n                                        className={`form-control form-control-lg ${touched.nombre ? (errors.nombre ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                        id=\"nombre\"\r\n                                        aria-describedby=\"nombreAyuda\"\r\n                                        placeholder=\"Nombre\"\r\n                                    />\r\n                                    <small\r\n                                        id=\"nombreAyuda\"\r\n                                        className={`form-text ${touched.nombre && errors.nombre ? \"is-invalid\" : \"\"\r\n                                        }`}\r\n                                    >\r\n                                        {touched.nombre && errors.nombre\r\n                                            ? errors.nombre\r\n                                            : \"Indicanos tu nombre y apellido.\"}\r\n                                    </small>\r\n                                </>\r\n                            )}\r\n                        </Field>\r\n                    </div>\r\n                    <div className=\"form-group input-wrapper\">\r\n                        <label\r\n                            htmlFor=\"rut\"\r\n                            className=\"control-label\"\r\n                        >\r\n                            RUT\r\n                        </label>\r\n                        <Field name=\"rut\">\r\n                            {({\r\n                                  field,\r\n                                  form: { touched, errors },\r\n                              }) => (\r\n                                <>\r\n                                    <MaskedInput\r\n                                        {...field}\r\n                                        type=\"text\"\r\n                                        mask={rutMask}\r\n                                        className={`form-control form-control-lg ${touched.rut ? (errors.rut ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                        id=\"rut\"\r\n                                        aria-describedby=\"rutAyuda\"\r\n                                        placeholder=\"RUT\"\r\n                                    />\r\n                                    <small\r\n                                        id=\"rutAyuda\"\r\n                                        className={`form-text ${touched.rut && errors.rut ? \"is-invalid\" : \"\"}`}\r\n                                    >\r\n                                        {touched.rut && errors.rut\r\n                                            ? errors.rut\r\n                                            : \"Ej. 12.345.678-9.\"}\r\n                                    </small>\r\n                                </>\r\n                            )}\r\n                        </Field>\r\n                    </div>\r\n                    <div className=\"form-group input-wrapper\">\r\n                        <label\r\n                            htmlFor=\"correo\"\r\n                            className=\"control-label\"\r\n                        >\r\n                            Correo\r\n                        </label>\r\n                        <Field name=\"correo\">\r\n                            {({\r\n                                  field,\r\n                                  form: { touched, errors },\r\n                              }) => (\r\n                                <>\r\n                                    <input\r\n                                        {...field}\r\n                                        type=\"email\"\r\n                                        className={`form-control form-control-lg ${touched.correo ? (errors.correo ? 'is-invalid' : 'is-valid') : ''\r\n                                        }`}\r\n                                        id=\"correo\"\r\n                                        aria-describedby=\"correoAyuda\"\r\n                                        placeholder=\"Correo\"\r\n                                    />\r\n                                    <small\r\n                                        id=\"correoAyuda\"\r\n                                        className={`form-text ${touched.correo && errors.correo & \"is-invalid\"}`}\r\n                                    >\r\n                                        {touched.correo && errors.correo\r\n                                            ? errors.correo\r\n                                            : \"Ej. aumentatusueldo@afpmodelo.cl\"}\r\n                                    </small>\r\n                                </>\r\n                            )}\r\n                        </Field>\r\n                    </div>\r\n                    <div className=\"form-group input-wrapper\">\r\n                        <label\r\n                            htmlFor=\"celular\"\r\n                            className=\"control-label\"\r\n                        >\r\n                            Celular\r\n                        </label>\r\n                        <Field name=\"celular\">\r\n                            {({\r\n                                  field,\r\n                                  form: { touched, errors },\r\n                              }) => (\r\n                                <>\r\n                                    <MaskedInput\r\n                                        {...field}\r\n                                        type=\"text\"\r\n                                        mask={celularMask}\r\n                                        className={`form-control form-control-lg ${touched.celular ? (errors.celular ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                        id=\"celular\"\r\n                                        aria-describedby=\"celularAyuda\"\r\n                                        placeholder={`9 ____ ____`}\r\n                                    />\r\n\r\n                                    <small\r\n                                        id=\"celularAyuda\"\r\n                                        className={`form-text ${touched.celular && errors.celular && \"is-invalid\"}`}\r\n                                    >\r\n                                        {touched.celular && errors.celular ? errors.celular : \"Ej. 9 1112 23XX\"}\r\n                                    </small>\r\n                                </>\r\n                            )}\r\n                        </Field>\r\n                    </div>\r\n\r\n\r\n                </WizardStep>\r\n                <WizardStep\r\n                    onSubmit={() => console.log('Step2 onSubmit')}\r\n                    validationSchema={Step2Schema}\r\n                >\r\n                    <div className=\"form-group input-wrapper\">\r\n                        <label\r\n                            htmlFor=\"sueldo\"\r\n                            className={\"control-label\"}>sueldo\r\n                        </label>\r\n                        <Field name=\"sueldo\"\r\n                        >\r\n                            {({\r\n                                  field,\r\n                                  form: { touched, errors },\r\n                              }) => (\r\n                                <>\r\n                                    <MaskedInput\r\n                                        {...field}\r\n                                        type=\"text\"\r\n                                        mask={dineroMask}\r\n                                        className={`form-control form-control-lg ${touched.sueldo ? (errors.sueldo ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                        id=\"sueldo\"\r\n                                        aria-describedby=\"sueldoAyuda\"\r\n                                        placeholder={`Sueldo L${iacento}quido`}\r\n                                    />\r\n                                    <small\r\n                                        id=\"sueldoAyuda\"\r\n                                        className={`form-text \r\n                                                    ${touched.sueldo && errors.sueldo ? \"is-invalid\" : \"\"}`}\r\n                                    >\r\n                                        {touched.sueldo && errors.sueldo\r\n                                            ? errors.sueldo\r\n                                            : `El sueldo l${iacento}quido que recibes luego de los descuentos legales.`}\r\n                                    </small>\r\n                                </>\r\n                            )}\r\n                        </Field>\r\n                    </div>\r\n                    <div className=\"form-group input-wrapper\">\r\n                        <label\r\n                            htmlFor=\"ahorro\"\r\n                            className=\"control-label\"\r\n                        >\r\n                            Monto Ahorro\r\n                        </label>\r\n                        <Field name=\"ahorro\">\r\n                            {({\r\n                                  field,\r\n                                  form: { touched, errors },\r\n                              }) => (\r\n                                <>\r\n                                    <MaskedInput\r\n                                        {...field}\r\n                                        type=\"text\"\r\n                                        mask={dineroMask}\r\n                                        className={`form-control form-control-lg ${touched.ahorro ? (errors.ahorro ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                        id=\"ahorro\"\r\n                                        aria-describedby=\"ahorroAyuda\"\r\n                                        placeholder=\"Ahorro Mensual\"\r\n                                    />\r\n                                    <small\r\n                                        id=\"ahorroAyuda\"\r\n                                        className={`form-text ${touched.ahorro && errors.ahorro ? \"is-invalid\" : \"\"}`}\r\n                                    >\r\n                                        {touched.ahorro && errors.ahorro\r\n                                            ? errors.ahorro\r\n                                            : `El monto en pesos que invertir${iacento}as en tu APV.`}\r\n                                    </small>\r\n                                </>\r\n                            )}\r\n                        </Field>\r\n                    </div>\r\n\r\n                    <div className=\"form-group input-wrapper select\">\r\n                        <label htmlFor=\"afp\">\r\n                            Ind{iacento}canos tu AFP actual:\r\n                        </label>\r\n                        <Field name=\"afp\">\r\n                            {({\r\n                                  field,\r\n                                  form: { touched, errors },\r\n                              }) => (\r\n                                <>\r\n                                    <select\r\n                                        {...field}\r\n                                        className=\"form-control form-control-lg\"\r\n                                        id=\"afp\"\r\n                                        name=\"afp\"\r\n                                    >\r\n                                        {\" \"}\r\n                                        {/* eslint-disable-line */}\r\n                                        <option value=\"default\">\r\n                                            Seleccione una AFP\r\n                                        </option>\r\n                                        <option value=\"0\">AFP Capital</option>\r\n                                        <option value=\"1\">AFP Cuprum</option>\r\n                                        <option value=\"2\">AFP Habitat</option>\r\n                                        <option value=\"3\">AFP Plan Vital</option>\r\n                                        <option value=\"4\">AFP Provida</option>\r\n                                        <option value=\"6\">AFP Uno</option>\r\n                                    </select>\r\n                                    <small\r\n                                        id=\"ahorroAyuda\"\r\n                                        className={`form-text ${touched.afp && errors.afp ? \"is-invalid\" : \"\"}`}\r\n                                    >\r\n                                        {touched.afp && errors.afp\r\n                                            ? errors.afp\r\n                                            : `El monto en pesos que invertir${iacento}as en tu APV.`}\r\n                                    </small>\r\n                                </>\r\n                            )}\r\n                        </Field>\r\n                    </div>\r\n                </WizardStep>\r\n            </Wizard>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default APVForm;"]},"metadata":{},"sourceType":"module"}